filter {

  if [type] == "sys_log" or [fields][document_type] == "sys_log" {
    grok {
      match => { "message" => [
          "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:iptables_hostname} %{DATA:iptables_program}(?:\[%{POSINT:iptables_pid}\])?: %{NOTSPACE:iptables_action}: IN=%{WORD:iptables_nic_in} OUT=(%{WORD:iptables_nic_out})? MAC=%{IPTABLESMAC:iptables_mac} SRC=%{IP:iptables_src_ip} DST=%{IP:iptables_dest_ip} LEN=%{NUMBER} TOS=%{BASE16NUM} PREC=%{BASE16NUM} TTL=%{NUMBER} ID=%{NUMBER} (DF )?PROTO=%{WORD:iptables_proto} SPT=%{NUMBER:iptables_src_port} DPT=%{NUMBER:iptables_dest_port} %{GREEDYDATA:iptables_message}",
          "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}"
        ]
      }
      patterns_dir => [ "./patterns", "/opt/logstash/conf.d/patterns", "/etc/logstash/patterns" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "@timestamp"
      add_field => { "debug_timestamp" => "timestampMatched"}
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "syslog_timestamp"
      add_field => { "debug_syslog_timestamp" => "timestampMatched"}
    }
    ruby {
      code => "event.set('lag_seconds', Time.now.to_f - event.get('@timestamp').to_f)"
    }
    if [lag_seconds] > 5184000  {
      drop { }
    }
  }


}
