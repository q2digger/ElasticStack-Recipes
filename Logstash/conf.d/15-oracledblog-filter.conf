filter {
  if [type] == "oracle_alert_log" or [fields][document_type] == "oracle_alert_log" {
    grok {
      match => {
        "message" => [
          "%{ORACLE_ALERT_DATETIME:oraclealert_datetime}\n%{SUPERGREEDYDATA:oraclealert_loginfo}",
          "%{SUPERGREEDYDATA:oraclealert_loginfo}"
        ]
      }
      patterns_dir => [ "./patterns", "/opt/logstash/conf.d/patterns", "/etc/logstash/patterns" ]
    }
    grok {
      match => {
        "source" => "%{GREEDYDATA}/alert_%{GREEDYDATA:oraclealert_sid}.log"
      }
    }
    date {
      match => ["oraclealert_datetime","E MMM dd HH:mm:ss yyyy"]
      target => "@timestamp"
      add_field => { "debug_timestamp" => "timestampMatched"}
    }
    
    ## prevent logstash from backfilling logs older than 60 days
    ruby {
      code => "event.set('lag_seconds', Time.now.to_f - event.get('@timestamp').to_f)"
    }
    if [lag_seconds] > 5184000  {
      drop { }
    }

  }

  if [type] == "oracle_listener_log" or [fields][document_type] == "oracle_listener_log" {
    grok {
      match => {
        "message" => [
          "%{ORACLE_LSNR_DATETIME:oraclelsnr_datetime}%{SPACE}\*%{SPACE}\(%{DATA:oraclelsnr_connect_data}\)%{SPACE}\*%{SPACE}\(%{DATA:oraclelsnr_client_info}\)%{SPACE}\*%{SPACE}%{WORD:oraclelsnr_status}%{SPACE}\*%{SPACE}%{DATA:oraclelsnr_sid}%{SPACE}\*%{SPACE}%{NUMBER}",
          "%{ORACLE_LSNR_DATETIME:oraclelsnr_datetime}%{SPACE}\*%{SPACE}%{WORD:oraclelsnr_status}%{SPACE}\*%{SPACE}%{DATA:oraclelsnr_sid}%{SPACE}%{GREEDYDATA}?",
          "%{DATA}"
        ]
      }
      patterns_dir => [ "./patterns", "/opt/logstash/conf.d/patterns", "/etc/logstash/patterns" ]
    }
    
    if [oraclelsnr_connect_data] {
      grok {
        match => {
          "oraclelsnr_connect_data" => [
            "CONNECT_DATA=\(CID=\(PROGRAM=%{DATA:oraclelsnr_program}?\)\(HOST=%{DATA:oraclelsnr_source_host}\)\(USER=%{DATA:oraclelsnr_user}?\)\)\((SID|SERVICE_NAME)=%{DATA:oraclelsnr_service_name}\)\(CID=\(PROGRAM=%{DATA}?\)\(HOST=%{DATA}\)\(USER=%{DATA}?\)\)",
            "CONNECT_DATA=\((SID|SERVICE_NAME)=%{DATA:oraclelsnr_service_name}\)\(CID=\(PROGRAM=%{DATA:oraclelsnr_program}?\)\(HOST=%{DATA:oraclelsnr_source_host}\)\(USER=%{DATA:oraclelsnr_user}?\)\)",
            "CONNECT_DATA=\(CID=\(PROGRAM=%{DATA:oraclelsnr_program}?\)\(HOST=%{DATA:oraclelsnr_source_host}\)\(USER=%{DATA:oraclelsnr_user}?\)\)"
          ]
        }
      }
    }
    
    if [oraclelsnr_client_info] {
      grok {
        match => {
          "oraclelsnr_client_info" => [
            "ADDRESS=\(PROTOCOL=tcp\)\(HOST=%{IPV4:oraclelsnr_source_ip}\)\(PORT=%{INT:oraclelsnr_source_port}\)"
          ]
        }
      }
    }
    
    date {
      match => ["oraclelsnr_datetime","dd-MMM-yyyy HH:mm:ss"]
      target => "@timestamp"
      add_field => { "debug_timestamp" => "timestampMatched"}
    }
    ruby {
      code => "event.set('lag_seconds', Time.now.to_f - event.get('@timestamp').to_f)"
    }
    if [lag_seconds] > 5184000  {
      drop { }
    }
  }
}


